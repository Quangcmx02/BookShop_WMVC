@model List<GioHangChiTiet>
<div class="container mt-4">
    <h2 class="text-center mb-4">Giỏ hàng</h2>

    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger text-center">@ViewBag.ErrorMessage</div>
    }

    <form asp-action="PlaceOrder" method="post">
        <table class="table table-bordered table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>Chọn</th>
                    <th>Sản phẩm</th>
                    <th>Số lượng</th>
                    <th>Đơn giá</th>
                    <th>Tổng</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                @if (Model == null || !Model.Any())
                {
                    <tr>
                        <td colspan="6" class="text-center">Giỏ hàng của bạn đang trống.</td>
                    </tr>
                }
                else
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @if (item.SachId.HasValue)
                                {
                                    <input onchange="calculateTotal" type="checkbox" name="selectedItems" value="@item.SachId" />
                                }
                                @if (item.ComboId.HasValue)
                                {
                                    <input onchange="calculateTotal" type="checkbox" name="selectedComboItems" value="@item.ComboId" />
                                }
                            </td>
                            <td>
                                @if (item.Combo != null)
                                {
                                    <!-- Hiển thị Combo -->
                                    <a class="product-link" href="@Url.Action("Details", "Combo", new { id = item.Combo.ComboId })">
                                        <strong>Combo </strong> @item.Combo.TenCombo
                                        <br />
                                        <!-- Hiển thị ảnh combo -->
                                        <img src="@item.Combo.LinkImages" alt="@item.Combo.TenCombo" style="width: 50px; height: auto;" />
                                    </a>
                                }
                                else
                                {
                                    <!-- Hiển thị Sách -->
                                    <a class="product-link" href="@Url.Action("Details", "Product", new { id = item.Sach.SachId })">
                                        @item.Sach.TenSach
                                    </a>
                                    <br />
                                    <img src="@item.Sach.HinhAnh" alt="@item.Sach.TenSach" style="width: 50px; height: auto;" />
                                }
                            </td>
                            <td>
                                <form >
                                    @if (item.Combo != null)
                                    {
                                        <input type="number" name="quantityCombo" value="@item.SoLuongCombo"
                                               min="1" max="@(item.Combo?.Quantity ??  0)"
                                               class="form-control w-auto d-inline"
                                               oninput="updateCart(@item.Combo.ComboId, this.value, true)">

                                    }
                                    else
                                    {
                                        <input type="number" name="quantitySach" value="@item.SoLuongSach"
                                               min="1" max="@(item.Sach?.SoLuong?? 0)"
                                               class="form-control w-auto d-inline"
                                               oninput="updateCart(@item.Sach.SachId, this.value, false)">

                                    }
                                    @if (item.Combo != null)
                                    {
                                        <!-- Nếu là Combo, truyền ComboId -->
                                        <input type="hidden" name="id" value="@item.Combo.ComboId" />
                                        <input type="hidden" name="isCombo" value="true" />
                                    }
                                    else
                                    {
                                        <!-- Nếu là Sách, truyền SachId -->
                                        <input type="hidden" name="id" value="@item.Sach.SachId" />
                                        <input type="hidden" name="isCombo" value="false" />
                                    }

                                    <button type="submit" class="btn btn-warning btn-sm">Cập nhật</button>
                                </form>
                            </td>

                            <td>@item.DonGia.ToString("C")</td>
                            <td>
                                @if (item.Combo != null)
                                {
                                    @(((decimal)item.SoLuongCombo * item.Combo.Gia).ToString("C"))
                                }
                                else
                                {
                                    @(((decimal)item.SoLuongSach * item.DonGia).ToString("C"))
                                }
                            </td>

                            <td>
                                <form asp-action="RemoveFromCart" method="post">
                                    @if (item.Combo != null)
                                    {
                                        <!-- Nếu là Combo, truyền ComboId -->
                                        <input type="hidden" name="id" value="@item.Combo.ComboId" />
                                        <input type="hidden" name="isCombo" value="true" />
                                    }
                                    else
                                    {
                                        <!-- Nếu là Sách, truyền SachId -->
                                        <input type="hidden" name="id" value="@item.Sach.SachId" />
                                        <input type="hidden" name="isCombo" value="false" />
                                    }

                                    <button type="submit" class="btn btn-danger btn-sm">Xóa</button>
                                </form>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        @if (Model != null && Model.Any())
        {
            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary">Đặt hàng</button>
                <button type="button" class="btn btn-secondary" onclick="window.location.href='@Url.Action("Index", "Product")'">Quay lại</button>
            </div>
        }
    </form>
</div>
<div id="totalAmount" class="text-right font-weight-bold mt-3">Tổng tiền: 0 VND</div>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<!-- Thêm CSS tùy chỉnh nếu cần -->
<style>
    .table td, .table th {
        vertical-align: middle;
    }

    .table img {
        max-width: 50px;
        height: auto;
    }

    .table ul {
        padding-left: 20px;
    }

        .table ul li {
            list-style-type: none;
        }

    .product-link {
        text-decoration: none; /* Xóa gạch chân */
        color: inherit; /* Giữ nguyên màu chữ của sản phẩm */
    }

        .product-link:hover {
            color: #007bff; /* Thay đổi màu khi hover */
        }
</style>

<script>
    function checkAndSetMaxQuantity(input) {
        const max = parseInt(input.max);
        const value = parseInt(input.value);

        if (value >= max) {
            input.value = max;
            alert(`Số lượng tối đa của sản phẩm này là ${max}`);
        }
    }
    document.addEventListener("DOMContentLoaded", function () {
        const checkboxes = document.querySelectorAll("input[type='checkbox'][name='selectedItems'], input[type='checkbox'][name='selectedComboItems']");
        const rows = document.querySelectorAll("tbody tr");
        const totalAmountDisplay = document.getElementById("totalAmount");

        function calculateTotal() {
            let totalUSD = 0;

            checkboxes.forEach((checkbox, index) => {
                if (checkbox.checked) {
                    const row = rows[index];
                    const totalCell = row.querySelector("td:nth-child(5)");
                    const value = parseFloat(totalCell.textContent.replace(/[^0-9.-]+/g, "")); // Loại bỏ ký tự không phải số
                    totalUSD += isNaN(value) ? 0 : value;
                }
            });

            totalAmountDisplay.textContent = `Tổng tiền: ${totalUSD.toLocaleString("en-US", { style: "currency", currency: "USD" })}`;
        }

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener("change", calculateTotal);
        });

        // Tính lại tổng tiền khi trang được tải
        calculateTotal();
    });  function updateCart(id, quantity, isCombo) {
        fetch('/Cart/UpdateCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                id: id,
                quantityCombo: isCombo ? quantity : 0,
                quantitySach: isCombo ? 0 : quantity,
                isCombo: isCombo
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                console.log("Cập nhật thành công!");
            } else {
                alert(data.message || "Có lỗi xảy ra!");
            }
        })
        .catch(error => console.error("Lỗi:", error));
    }
</script>
